name: Build, Publish and Deploy to DEV
on:
  push:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.artifact.outputs.name }}
      commit-hash: ${{ steps.artifact.outputs.hash }}
    
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: "zulu"
        java-version: 8
    
    - name: Build and Test
      run: mvn clean compile test
    
    - name: Stamp artifact file name with commit hash
      id: artifact
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
        artifactName=$(basename $artifactName2)
        echo "name=$artifactName" >> $GITHUB_OUTPUT
        echo "hash=$commitHash" >> $GITHUB_OUTPUT

    - name: Upload artifact for reuse
      uses: actions/upload-artifact@v4
      with:
        name: mule-app-${{ github.sha }}
        path: target/*.jar
        retention-days: 30

  publish:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4

    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: "zulu"
        java-version: 8

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: mule-app-${{ github.sha }}
        path: target/

    - name: Publish to Exchange
      run: |
        mvn deploy --settings .maven/settings.xml -DskipMunitTests \
        -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
        -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"

  deploy-dev:
    runs-on: ubuntu-latest
    needs: [build, publish]
    environment: development
    
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4

    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: "zulu"
        java-version: 8

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: mule-app-${{ github.sha }}
        path: target/

    - name: Deploy to CloudHub DEV
      run: |
        mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
        -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
        -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}" \
        -Denvironment=DEV